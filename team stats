class Team:
    def __init__(self,id_1,season = '2019-20',league = '00'):
        self.id = id_1
        self.season = season
        self.league = league
    def bio_team(self):
        from nba_api.stats.endpoints import teaminfocommon
        team_info = teaminfocommon.TeamInfoCommon(team_id= self.id,
                                                  league_id=self.league)
        team_info_df = team_info.get_data_frames()
        print(team_info_df)

        from nba_api.stats.endpoints import teamhistoricalleaders
        team_historical_leaders = teamhistoricalleaders.TeamHistoricalLeaders(team_id= self.id,
                                                                              season_id = '22019',
                                                                              league_id = self.league)
        team_historical_leaders_df = team_historical_leaders.get_data_frames()
        print(team_historical_leaders_df)

        from nba_api.stats.endpoints import franchiseleaders
        franchise_leader = franchiseleaders.FranchiseLeaders(team_id=self.id,
                                                             league_id_nullable=self.league)
        franchise_leader_df = franchise_leader.get_data_frames()
        print(franchise_leader_df)

        from nba_api.stats.endpoints import teamdetails
        team_details = teamdetails.TeamDetails(team_id=self.id)
        team_details_df = team_details.get_data_frames()
        print(team_details_df)
    def roster_stats(self):
        from nba_api.stats.endpoints import commonteamroster
        common_team_roster = commonteamroster.CommonTeamRoster(team_id=self.id,
                                                               season=self.season,
                                                               league_id_nullable=self.league)
        common_team_roster_df = common_team_roster.get_data_frames()
        print(common_team_roster_df)
    def defensive_stats(self):
        from nba_api.stats.endpoints import leaguedashptteamdefend
        league_dash_pt_team_defend = leaguedashptteamdefend.LeagueDashPtTeamDefend(defense_category='Overall',
                                                                                   league_id=self.league,
                                                                                   per_mode_simple='Totals',
                                                                                   season=self.season,
                                                                                   season_type_all_star='Regular Season',
                                                                                   team_id_nullable=self.id)
        league_dash_pt_team_defend_df = league_dash_pt_team_defend.get_data_frames()
        print(league_dash_pt_team_defend_df)

        from nba_api.stats.endpoints import defensehub
        defense_hub = defensehub.DefenseHub(game_scope_detailed='Season',
                                            league_id=self.league,
                                            player_or_team='Team',
                                            player_scope='All Players',
                                            season=self.season,
                                            season_type_playoffs='Regular Season')
        defense_hub_df = defense_hub.get_data_frames()
        print(defense_hub_df[1])

    def offensive_stats(self):
        from nba_api.stats.endpoints import leaguedashoppptshot
        league_dash_opppt_shot = leaguedashoppptshot.LeagueDashOppPtShot(league_id=self.league,
                                                                         per_mode_simple='Totals',
                                                                         season=self.season,
                                                                         season_type_all_star='Regular Season',
                                                                         team_id_nullable=self.id)
        league_dash_opppt_shot_df = league_dash_opppt_shot.get_data_frames()
        print(league_dash_opppt_shot_df)

        from nba_api.stats.endpoints import leaguedashteamptshot
        league_dash_team_pt_shot = leaguedashteamptshot.LeagueDashTeamPtShot(league_id=self.league,
                                                                             per_mode_simple='Totals',
                                                                             season=self.season,
                                                                             season_type_all_star='Regular Season',
                                                                             team_id_nullable=self.id)
        league_dash_team_pt_shot_df = league_dash_team_pt_shot.get_data_frames()
        print(league_dash_team_pt_shot_df)

        from nba_api.stats.endpoints import teamdashptshots
        team_dash_pt_shot = teamdashptshots.TeamDashPtShots(last_n_games='0',
                                                            league_id=self.league,
                                                            month='0',
                                                            opponent_team_id=' ',
                                                            per_mode_simple='Totals',
                                                            period='0',season='2019-20',
                                                            season_type_all_star='Regular Season',
                                                            team_id=self.id)
